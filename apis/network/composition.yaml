apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xnetworks.demo.wiz.io
spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: demo.wiz.io/v1alpha1
    kind: XNetwork
  patchSets:
    - name: network-id
      patches:
        - type: FromCompositeFieldPath
          fromFieldPath: spec.id
          toFieldPath: metadata.labels[networks.demo.wiz.io/network-id]
  resources:
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: VPC
        spec:
          forProvider:
            region: us-west-2
            cidrBlock: 192.168.0.0/16
            enableDnsSupport: true
            enableDnsHostNames: true
      name: wiz-vcp
      patches:
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: us-west-2a
            access: public
        spec:
          forProvider:
            region: us-west-2
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.0.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: us-west-2a
            tags:
              kubernetes.io/role/elb: "1"
      name: subnet-public-west-2a
      patches:
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-public-a'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
          transforms:
            - string:
                fmt: '%s-public-a'
              type: string
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: us-west-2b
            access: public
        spec:
          forProvider:
            region: us-west-2
            mapPublicIpOnLaunch: true
            cidrBlock: 192.168.64.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: us-west-2b
            tags:
              kubernetes.io/role/elb: "1"
      name: subnet-public-west-2b
      patches:
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-public-b'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
          transforms:
            - string:
                fmt: '%s-public-b'
              type: string
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: us-west-2a
            access: private
        spec:
          forProvider:
            region: us-west-2
            cidrBlock: 192.168.128.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: us-west-2a
            tags:
              kubernetes.io/role/internal-elb: "1"
      name: subnet-private-west-2a
      patches:
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-private-a'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
          transforms:
            - string:
                fmt: '%s-private-a'
              type: string
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Subnet
        metadata:
          labels:
            zone: us-west-2b
            access: private
        spec:
          forProvider:
            region: us-west-2
            cidrBlock: 192.168.192.0/18
            vpcIdSelector:
              matchControllerRef: true
            availabilityZone: us-west-2b
            tags:
              kubernetes.io/role/internal-elb: "1"
      name: subnet-private-west-2b
      patches:
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-private-b'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
          transforms:
            - string:
                fmt: '%s-private-b'
              type: string
## Gateway and Routes
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: InternetGateway
        spec:
          forProvider:
            region: us-west-2
      name: gateway
      patches:
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-ig'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[networks.demo.wiz.io/network-id]
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTable
        spec:
          forProvider:
            region: us-west-2
            vpcIdSelector:
              matchControllerRef: true
      name: routeTable
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.vpcIdSelector.matchLabels[networks.demo.wiz.io/network-id]
        - type: PatchSet
          patchSetName: network-id
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-routetable'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.tags.Name
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: Route
        spec:
          forProvider:
            destinationCidrBlock: 0.0.0.0/0
            region: us-west-2
      name: publicRoute
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.routeTableIdRef.name
          transforms:
            - string:
                fmt: '%s-routetable'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.gatewayIdRef.name
          transforms:
            - string:
                fmt: '%s-ig'
              type: string
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: MainRouteTableAssociation
        spec:
          forProvider:
            region: us-west-2
            routeTableIdSelector:
              matchControllerRef: true
            vpcIdSelector:
              matchControllerRef: true
      name: mainRouteTableAssociation
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.routeTableIdRef.name
          transforms:
            - string:
                fmt: '%s-routetable'
              type: string
        - type: PatchSet
          patchSetName: network-id

    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: us-west-2
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: us-west-2a
                access: public
      name: routetableAssociation-public-a
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.routeTableIdRef.name
          transforms:
            - string:
                fmt: '%s-routetable'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-rta-public-a'
              type: string
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: us-west-2
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: us-west-2b
                access: public
      name: routetableAssociation-public-b
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.routeTableIdRef.name
          transforms:
            - string:
                fmt: '%s-routetable'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-rta-public-b'
              type: string
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: us-west-2
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: us-west-2a
                access: private
      name: routetableAssociation-private-a
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.routeTableIdRef.name
          transforms:
            - string:
                fmt: '%s-routetable'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-rta-private-a'
              type: string
    - base:
        apiVersion: ec2.aws.upbound.io/v1beta1
        kind: RouteTableAssociation
        spec:
          forProvider:
            region: us-west-2
            routeTableIdSelector:
              matchControllerRef: true
            subnetIdSelector:
              matchControllerRef: true
              matchLabels:
                zone: us-west-2b
                access: private
      name: routetableAssociation-private-b
      patches:
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.routeTableIdRef.name
          transforms:
            - string:
                fmt: '%s-routetable'
              type: string
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - string:
                fmt: '%s-rta-private-b'
              type: string